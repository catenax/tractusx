#
# Copyright (c) 2021 T-Systems International GmbH (Catena-X Consortium)
#
# See the AUTHORS file(s) distributed with this work for additional
# information regarding authorship.
#
# See the LICENSE file(s) distributed with this work for
# additional information regarding license terms.
#

#####################################################
# Github Workflow for continuous terraform deployment
#####################################################

name: Terraform Deploy

on: 
  push:
    paths:
      - 'infrastructure/terraform/**'
      - '.github/workflows/terraform.yml'

jobs:
  environment:
    name: Determine Target Environment
    runs-on: ubuntu-latest
    outputs:
      workspace: ${{ steps.setvars.outputs.workspace }}

    steps:
      - name: Set variables
        id: setvars
        run: |
          if [[ "${{github.repository}}" == eclipse/tractusx ]]; then
             if [[ "${{github.ref}}" == refs/heads/main ]]; then
                echo "Determined PRODUCTION"
                echo "::set-output name=workspace::prod"
             else
                echo "Unsupported Environment on ECLIPSE. Leaving Workspace empty."
             fi
          else 
            if [[ "${{github.repository}}" == catenax/tractusx ]]; then
              if [[ "${{github.ref}}" == refs/heads/main ]]; then
                echo "Determined INTEGRATION"
                echo "::set-output name=workspace::int"
              elif [[ "${{github.ref}}" = refs/heads/feature/CAX-1-semantics || "${{github.ref}}" = refs/heads/feature/CAX-1-semantics@CXMVP-63-semantic-architecture ]]; then
                  echo "Determined SEMANTICS"
                  echo "::set-output name=workspace::dev042"
              else 
                  echo "Unsupported Branch on CATENAX. Leaving Workspace empty."
              fi
            else
                echo "Unsupported Environment/Repository. Leaving Workspace empty."
            fi
          fi

  terraform:
    name: Terraform Target Environment
    runs-on: ubuntu-latest
    needs: environment
    if: ${{needs.environment.outputs.workspace}}
    env:
      WORKSPACE: ${{needs.environment.outputs.workspace}}
    steps:

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.10

    - name: Checkout
      uses: actions/checkout@v2

    - name: Terraform Init
      working-directory: ./infrastructure/terraform
      run: | 
          terraform init

#    - name: Download old tfstate
#      run: |
#        az storage blob download --name dev042.terraform.tfstate --container-name tfstate --account-name catenaxterraformstate --auth-mode login --file .terraform/terraform.tfstate

    - name: Terraform Save Plan
      working-directory: ./infrastructure/terraform
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        AZURE_CLIENT_ID=`echo ${AZURE_CREDENTIALS} | jq -r .clientId`
        AZURE_CLIENT_SECRET=`echo ${AZURE_CREDENTIALS} | jq -r .clientSecret`
        AZURE_SUBSCRIPTION_ID=`echo ${AZURE_CREDENTIALS} | jq -r .subscriptionId`
        AZURE_TENANT_ID=`echo ${AZURE_CREDENTIALS} | jq -r .tenantId`
        terraform plan --var-file=environments/${{needs.environment.outputs.workspace}}.tfvars -var azure_subscription_id=${AZURE_SUBSCRIPTION_ID} -var azure_client_id=${AZURE_CLIENT_ID} -var azure_client_secret=${AZURE_CLIENT_SECRET} -var azure_tenant_id=${AZURE_TENANT_ID} -out .terraform/terraform${GITHUB_SHA}.plan

    - name: Upload Plan
      working-directory: ./infrastructure/terraform
      run: |
        az storage blob upload --name ${{needs.environment.outputs.workspace}}terraform${GITHUB_SHA}.plan --container-name tfstate --account-name catenaxterraformstate --auth-mode login --file .terraform/terraformterraform${GITHUB_SHA}.plan

    #- name: Terraform Auto-Apply
    #  working-directory: ./infrastructure/terraform
    #  run: |
    #    terraform apply -auto-approve --var-file=environments/${WORKSPACE}.tfvars .terraform/terraform.plan

    #- name: Upload State
    #  working-directory: ./infrastructure/terraform
    #  run: |
    #    az storage blob upload --name ${WORKSPACE}.terraform.plan --container-name tfstate --account-name catenaxterraformstate --auth-mode login --file .terraform/terraform.tfstate