name: PRS Deploy

on:
  push:
    branches:
      - main
    paths:
      - coreservices/partsrelationshipservice/**
      - .github/workflows/partsrelationshipservice-deploy.yml

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy PCR to'
        required: true
        default: 'dev'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: coreservices/partsrelationshipservice
    env:
      # Variables prefixed with TF_VAR_ are automatically picked up as Terraform inputs
      TF_VAR_image_tag: ${{ github.run_id }}
      # Default environment to deploy (overridden when deploying manually)
      ENVIRONMENT_TO_DEPLOY: dev
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Configure environment to deploy (manual deployment only)"
        if: ${{ github.event_name == 'workflow_dispatch'}}
        run: |
          echo "ENVIRONMENT_TO_DEPLOY=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
      - name: "Configure terraform tfvars and tfstate files"
        run: |
          echo "TERRAFORM_DEPLOY_VAR_FILE=environments/$ENVIRONMENT_TO_DEPLOY.tfvars" >> $GITHUB_ENV
          echo "TERRAFORM_STATE_KEY=prs.prs.$ENVIRONMENT_TO_DEPLOY.terraform.tfstate" >> $GITHUB_ENV
      - name: "Build and push PRS images to ACR"
        run: |
          source terraform/$TERRAFORM_DEPLOY_VAR_FILE
          cd/build_and_push_docker.sh "$image_registry" "$TF_VAR_image_tag"
      - name: "Run Terraform, deploying infrastructure to Azure and application to AKS"
        run: |
          set -euo pipefail # safe mode

          # Settings and credential for Terraform azurerm provider
          export ARM_CLIENT_ID=$(echo $AZURE_CREDENTIALS | jq -r .clientId)
          export ARM_CLIENT_SECRET=$(echo $AZURE_CREDENTIALS | jq -r .clientSecret)
          export ARM_TENANT_ID=$(echo $AZURE_CREDENTIALS | jq -r .tenantId)
          export ARM_SUBSCRIPTION_ID=$(az account show --query "id" --output tsv)

          pushd terraform
            terraform init -backend-config=key=${TERRAFORM_STATE_KEY}
            terraform apply --var-file ${TERRAFORM_DEPLOY_VAR_FILE} -auto-approve

        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
