# This is a basic workflow to help you get started with Actions

name: Daps-GitHub-actions-pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths:
      - 'DAPS/**'
       
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  HELM_EXPERIMENTAL_OCI: 1
  ACR_NAME: catenaxacr.azurecr.io
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Clone public International-Data-Spaces-Association/omejdn-daps
      uses: GuillaumeFalourd/clone-github-repo-action@v1
      with:
       owner: 'International-Data-Spaces-Association'
       repository: 'omejdn-daps'
    - name: Clone public tractusx PUBLIC repository
      uses: GuillaumeFalourd/clone-github-repo-action@v1
      with:
       owner: 'catenax'
       repository: 'tractusx'
       
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_NAME }}
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
    - name: Building and pusing docker image to acr
      run: |
        cd omejdn-daps && docker build -f Dockerfile -t ${{ env.ACR_NAME }}/daps:latest .
        docker push ${{ env.ACR_NAME }}/daps:latest 

             
        
    - name: install helm
      uses: Azure/setup-helm@v1
      with:
        version: 3.5.0
    - name: Clone public tractusx PUBLIC repository
      uses: GuillaumeFalourd/clone-github-repo-action@v1
      with:
        owner: 'catenax'
        repository: 'tractusx'

    - name: login to acr using helm
      run: |
        echo ${{ secrets.AZURE_REGISTRY_PASSWORD }} | helm registry login  ${{ env.ACR_NAME }} --username ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin 
    - name: save helm chart to local registry
      run: |
        helm chart save tractusx/daps/helm-chart ${{ env.ACR_NAME }}/helm/daps:latest
    - name: publish chart to acr
      run: |
       helm chart push ${{ env.ACR_NAME }}/helm/daps:latest
      

