/*
 * Catena-X Speedboat Test Data Generator
 * Disclaimer: This service serves synthetic, none-productive data for testing purposes only. All BOMs, part trees, VINs, serialNos etc. are synthetic
 *
 * OpenAPI spec version: 0.0.1 Speedboat
 * Contact: christian.kabelin@partner.bmw.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.Logo;
import io.swagger.client.model.MultiLanguageProperty;
import io.swagger.client.model.ProductImages;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * GeneralInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2021-10-03T20:34:34.146648200+02:00[Europe/Berlin]")
public class GeneralInformation {

  
  @JsonProperty("manufacturerName")
  private String manufacturerName = null;
  
  
  @JsonProperty("manufacturerLogo")
  private Logo manufacturerLogo = null;
  
  
  @JsonProperty("manufacturerProductDesignation")
  private MultiLanguageProperty manufacturerProductDesignation = null;
  
  
  @JsonProperty("manufacturerPartNumber")
  private String manufacturerPartNumber = null;
  
  
  @JsonProperty("manufacturerOrderCode")
  private String manufacturerOrderCode = null;
  
  
  @JsonProperty("productImages")
  private ProductImages productImages = null;
  
  public GeneralInformation manufacturerName(String manufacturerName) {
    this.manufacturerName = manufacturerName;
    return this;
  }

  
  /**
  * Get manufacturerName
  * @return manufacturerName
  **/
  
  
  @Schema(required = true, description = "")
  public String getManufacturerName() {
    return manufacturerName;
  }
  public void setManufacturerName(String manufacturerName) {
    this.manufacturerName = manufacturerName;
  }
  
  public GeneralInformation manufacturerLogo(Logo manufacturerLogo) {
    this.manufacturerLogo = manufacturerLogo;
    return this;
  }

  
  /**
  * Get manufacturerLogo
  * @return manufacturerLogo
  **/
  
  
  @Schema(description = "")
  public Logo getManufacturerLogo() {
    return manufacturerLogo;
  }
  public void setManufacturerLogo(Logo manufacturerLogo) {
    this.manufacturerLogo = manufacturerLogo;
  }
  
  public GeneralInformation manufacturerProductDesignation(MultiLanguageProperty manufacturerProductDesignation) {
    this.manufacturerProductDesignation = manufacturerProductDesignation;
    return this;
  }

  
  /**
  * Get manufacturerProductDesignation
  * @return manufacturerProductDesignation
  **/
  
  
  @Schema(required = true, description = "")
  public MultiLanguageProperty getManufacturerProductDesignation() {
    return manufacturerProductDesignation;
  }
  public void setManufacturerProductDesignation(MultiLanguageProperty manufacturerProductDesignation) {
    this.manufacturerProductDesignation = manufacturerProductDesignation;
  }
  
  public GeneralInformation manufacturerPartNumber(String manufacturerPartNumber) {
    this.manufacturerPartNumber = manufacturerPartNumber;
    return this;
  }

  
  /**
  * Get manufacturerPartNumber
  * @return manufacturerPartNumber
  **/
  
  
  @Schema(required = true, description = "")
  public String getManufacturerPartNumber() {
    return manufacturerPartNumber;
  }
  public void setManufacturerPartNumber(String manufacturerPartNumber) {
    this.manufacturerPartNumber = manufacturerPartNumber;
  }
  
  public GeneralInformation manufacturerOrderCode(String manufacturerOrderCode) {
    this.manufacturerOrderCode = manufacturerOrderCode;
    return this;
  }

  
  /**
  * Get manufacturerOrderCode
  * @return manufacturerOrderCode
  **/
  
  
  @Schema(required = true, description = "")
  public String getManufacturerOrderCode() {
    return manufacturerOrderCode;
  }
  public void setManufacturerOrderCode(String manufacturerOrderCode) {
    this.manufacturerOrderCode = manufacturerOrderCode;
  }
  
  public GeneralInformation productImages(ProductImages productImages) {
    this.productImages = productImages;
    return this;
  }

  
  /**
  * Get productImages
  * @return productImages
  **/
  
  
  @Schema(required = true, description = "")
  public ProductImages getProductImages() {
    return productImages;
  }
  public void setProductImages(ProductImages productImages) {
    this.productImages = productImages;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralInformation generalInformation = (GeneralInformation) o;
    return Objects.equals(this.manufacturerName, generalInformation.manufacturerName) &&
        Objects.equals(this.manufacturerLogo, generalInformation.manufacturerLogo) &&
        Objects.equals(this.manufacturerProductDesignation, generalInformation.manufacturerProductDesignation) &&
        Objects.equals(this.manufacturerPartNumber, generalInformation.manufacturerPartNumber) &&
        Objects.equals(this.manufacturerOrderCode, generalInformation.manufacturerOrderCode) &&
        Objects.equals(this.productImages, generalInformation.productImages);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(manufacturerName, manufacturerLogo, manufacturerProductDesignation, manufacturerPartNumber, manufacturerOrderCode, productImages);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralInformation {\n");
    
    sb.append("    manufacturerName: ").append(toIndentedString(manufacturerName)).append("\n");
    sb.append("    manufacturerLogo: ").append(toIndentedString(manufacturerLogo)).append("\n");
    sb.append("    manufacturerProductDesignation: ").append(toIndentedString(manufacturerProductDesignation)).append("\n");
    sb.append("    manufacturerPartNumber: ").append(toIndentedString(manufacturerPartNumber)).append("\n");
    sb.append("    manufacturerOrderCode: ").append(toIndentedString(manufacturerOrderCode)).append("\n");
    sb.append("    productImages: ").append(toIndentedString(productImages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



