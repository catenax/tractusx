---
openapi: 3.0.3
info:
  title: DotAAS Part 2 | HTTP/REST | Submodel Standalone (Proxy-Mode)
  description: Proxy version of a Submodel Server as part of Details of the Asset Administration Shell Part 2
  termsOfService: https://github.com/admin-shell-io/aas-specs
  contact:
    name: Michael Hoffmeister, Torben Miny, Andreas Orzelski, Manuel Sauer, Constantin Ziesche
  version: Final-Draft
servers:
- url: /
paths:
  /shells/{assetIdentifier}/aas/{submodelIdentifier}/submodel:
    get:
      tags:
      - Submodel Interface
      summary: Returns the Submodel
      operationId: GetSubmodel
      parameters:
       - name: idsResourceId
         in: path
         description: Id of the IDS Resource Hosting/Contracting the Shell Server
         required: false
         style: simple
         explode: false
         schema:
           type: string
      - name: assetIdentifier
        in: path
        description: The Asset Administration Shells’s unique id (BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      - name: content
        in: query
        description: Determines the request or response kind of the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: normal
          enum:
          - normal
          - trimmed
          - value
          - reference
          - path
      - name: extent
        in: query
        description: Determines to which extent the resource is being serialized
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - withBlobValue
          - withoutBlobValue
      responses:
        "200":
          description: Requested Submodel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submodel'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/1/0/RC02
  /shells/{assetIdentifier}/aas/{submodelIdentifier}/submodel/submodel-elements/{idShortPath}/invoke:
    post:
      tags:
      - Submodel Interface
      summary: Synchronously or asynchronously invokes an Operation at a specified path
      operationId: InvokeOperation
      parameters:
       - name: idsResourceId
         in: path
         description: Id of the IDS Resource Hosting/Contracting the Shell Server
         required: false
         style: simple
         explode: false
         schema:
           type: string
      - name: assetIdentifier
        in: path
        description: The Asset Administration Shells’s unique id (BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: async
        in: query
        description: Determines whether an operation invocation is performed asynchronously or synchronously
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: content
        in: query
        description: Determines the request or response kind of the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: normal
          enum:
          - normal
          - trimmed
          - value
          - reference
          - path
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated), in this case an operation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Operation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        required: true
      responses:
        "200":
          description: Operation result object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/1/0/RC02
      - https://admin-shell.io/aas/API/InvokeOperationAsync/1/0/RC02
components:
  schemas:
    IdentifierKeyValuePair:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - required:
        - key
        - subjectId
        - value
        properties:
          key:
            type: string
          subjectId:
            $ref: '#/components/schemas/Reference'
          value:
            type: string
    HasSemantics:
      type: object
      properties:
        semanticId:
          $ref: '#/components/schemas/Reference'
    Reference:
      type: object
      oneOf:
      - $ref: '#/components/schemas/GlobalReference'
      - $ref: '#/components/schemas/ModelReference'
    GlobalReference:
      required:
      - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
      allOf:
      - $ref: '#/components/schemas/Reference'
    Identifier:
      type: string
    ModelReference:
      required:
      - keys
      properties:
        referredSemanticId:
          $ref: '#/components/schemas/Reference'
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Key'
      allOf:
      - $ref: '#/components/schemas/Reference'
    Key:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/KeyElements'
        value:
          type: string
    KeyElements:
      type: string
      enum:
      - AssetAdministrationShell
      - AccessPermissionRule
      - ConceptDescription
      - Submodel
      - AnnotatedRelationshipElement
      - BasicEvent
      - Blob
      - Capability
      - DataElement
      - File
      - Entity
      - Event
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - SubmodelElement
      - SubmodelElementList
      - SubmodelElementStruct
      - View
      - FragmentReference
    AssetAdministrationShell:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - required:
        - assetInformation
        properties:
          assetInformation:
            $ref: '#/components/schemas/AssetInformation'
          derivedFrom:
            $ref: '#/components/schemas/Reference'
          security:
            $ref: '#/components/schemas/Security'
          submodels:
            type: array
            items:
              $ref: '#/components/schemas/Reference'
          views:
            type: array
            items:
              $ref: '#/components/schemas/View'
    Identifiable:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - required:
        - identification
        properties:
          administration:
            $ref: '#/components/schemas/AdministrativeInformation'
          identification:
            $ref: '#/components/schemas/Identifier'
    Referable:
      allOf:
      - $ref: '#/components/schemas/HasExtensions'
      - required:
        - idShort
        - modelType
        properties:
          category:
            type: string
          description:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          displayName:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          idShort:
            type: string
          modelType:
            $ref: '#/components/schemas/ModelType'
    HasExtensions:
      type: object
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/Extension'
    Extension:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - required:
        - name
        properties:
          name:
            type: string
          refersTo:
            $ref: '#/components/schemas/Reference'
          value:
            type: string
          valueType:
            $ref: '#/components/schemas/ValueTypeEnum'
    ValueTypeEnum:
      type: string
      enum:
      - anyUri
      - base64Binary
      - boolean
      - date
      - dateTime
      - dateTimeStamp
      - decimal
      - integer
      - long
      - int
      - short
      - byte
      - nonNegativeInteger
      - positiveInteger
      - unsignedLong
      - unsignedInt
      - unsignedShort
      - unsignedByte
      - nonPositiveInteger
      - negativeInteger
      - double
      - duration
      - dayTimeDuration
      - yearMonthDuration
      - float
      - gDay
      - gMonth
      - gMonthDay
      - gYear
      - gYearMonth
      - hexBinary
      - NOTATION
      - QName
      - string
      - normalizedString
      - token
      - language
      - Name
      - NCName
      - ENTITY
      - ID
      - IDREF
      - NMTOKEN
      - time
    LangString:
      required:
      - language
      - text
      type: object
      properties:
        language:
          type: string
        text:
          type: string
    ModelType:
      required:
      - name
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ModelTypes'
    ModelTypes:
      type: string
      enum:
      - AssetAdministrationShell
      - ConceptDescription
      - Submodel
      - AnnotatedRelationshipElement
      - BasicEvent
      - Blob
      - Capability
      - DataElement
      - File
      - Entity
      - Event
      - ModelReference
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - SubmodelElement
      - SubmodelElementList
      - SubmodelElementStruct
      - View
      - GlobalReference
      - FragmentReference
      - Constraint
      - Formula
      - Qualifier
    AdministrativeInformation:
      type: object
      properties:
        revision:
          type: string
        version:
          type: string
    HasDataSpecification:
      type: object
      properties:
        embeddedDataSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedDataSpecification'
    EmbeddedDataSpecification:
      required:
      - dataSpecification
      - dataSpecificationContent
      type: object
      properties:
        dataSpecification:
          $ref: '#/components/schemas/Reference'
        dataSpecificationContent:
          $ref: '#/components/schemas/DataSpecificationContent'
    DataSpecificationContent:
      oneOf:
      - $ref: '#/components/schemas/DataSpecificationIEC61360Content'
      - $ref: '#/components/schemas/DataSpecificationPhysicalUnitContent'
    DataSpecificationIEC61360Content:
      allOf:
      - $ref: '#/components/schemas/ValueObject'
      - required:
        - preferredName
        type: object
        properties:
          dataType:
            type: string
            enum:
            - DATE
            - STRING
            - STRING_TRANSLATABLE
            - REAL_MEASURE
            - REAL_COUNT
            - REAL_CURRENCY
            - BOOLEAN
            - URL
            - RATIONAL
            - RATIONAL_MEASURE
            - TIME
            - TIMESTAMP
            - INTEGER_COUNT
            - INTEGER_MEASURE
            - INTEGER_CURRENCY
          definition:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          levelType:
            type: array
            items:
              $ref: '#/components/schemas/LevelType'
          preferredName:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          shortName:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          sourceOfDefinition:
            type: string
          symbol:
            type: string
          unit:
            type: string
          unitId:
            $ref: '#/components/schemas/Reference'
          valueFormat:
            type: string
          valueList:
            $ref: '#/components/schemas/ValueList'
    ValueObject:
      type: object
      properties:
        value:
          type: string
        valueId:
          $ref: '#/components/schemas/Reference'
        valueType:
          $ref: '#/components/schemas/ValueTypeEnum'
    LevelType:
      type: string
      enum:
      - Min
      - Max
      - Nom
      - Typ
    ValueList:
      required:
      - valueReferencePairTypes
      type: object
      properties:
        valueReferencePairTypes:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ValueReferencePairType'
    ValueReferencePairType:
      allOf:
      - $ref: '#/components/schemas/ValueObject'
    DataSpecificationPhysicalUnitContent:
      required:
      - definition
      - unitName
      - unitSymbol
      type: object
      properties:
        conversionFactor:
          type: string
        definition:
          type: array
          items:
            $ref: '#/components/schemas/LangString'
        dinNotation:
          type: string
        eceCode:
          type: string
        eceName:
          type: string
        nistName:
          type: string
        registrationAuthorityId:
          type: string
        siName:
          type: string
        siNotation:
          type: string
        sourceOfDefinition:
          type: string
        supplier:
          type: string
        unitName:
          type: string
        unitSymbol:
          type: string
    AssetInformation:
      required:
      - assetKind
      properties:
        assetKind:
          $ref: '#/components/schemas/AssetKind'
        billOfMaterial:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        globalAssetId:
          $ref: '#/components/schemas/Reference'
        specificAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/IdentifierKeyValuePair'
        thumbnail:
          $ref: '#/components/schemas/File'
    AssetKind:
      type: string
      enum:
      - Type
      - Instance
    File:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - required:
        - mimeType
        properties:
          mimeType:
            type: string
          value:
            type: string
    SubmodelElement:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - properties:
          kind:
            $ref: '#/components/schemas/ModelingKind'
      oneOf:
      - $ref: '#/components/schemas/Blob'
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/Capability'
      - $ref: '#/components/schemas/Entity'
      - $ref: '#/components/schemas/Event'
      - $ref: '#/components/schemas/BasicEvent'
      - $ref: '#/components/schemas/MultiLanguageProperty'
      - $ref: '#/components/schemas/Operation'
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Range'
      - $ref: '#/components/schemas/ReferenceElement'
      - $ref: '#/components/schemas/AnnotatedRelationshipElement'
      - $ref: '#/components/schemas/RelationshipElement'
      - $ref: '#/components/schemas/SubmodelElementList'
      - $ref: '#/components/schemas/SubmodelElementStruct'
    Qualifiable:
      type: object
      properties:
        qualifiers:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
    Constraint:
      required:
      - modelType
      properties:
        modelType:
          $ref: '#/components/schemas/ModelType'
      oneOf:
      - $ref: '#/components/schemas/Qualifier'
      - $ref: '#/components/schemas/Formula'
    Qualifier:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/ValueObject'
      - required:
        - type
        properties:
          type:
            type: string
    Formula:
      allOf:
      - properties:
          dependsOn:
            type: array
            items:
              $ref: '#/components/schemas/Reference'
    ModelingKind:
      type: string
      enum:
      - Template
      - Instance
    Blob:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - required:
        - mimeType
        properties:
          mimeType:
            type: string
          value:
            type: string
    Capability:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - properties:
          kind:
            $ref: '#/components/schemas/ModelingKind'
      oneOf:
      - $ref: '#/components/schemas/Blob'
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/Capability'
      - $ref: '#/components/schemas/Entity'
      - $ref: '#/components/schemas/Event'
      - $ref: '#/components/schemas/BasicEvent'
      - $ref: '#/components/schemas/MultiLanguageProperty'
      - $ref: '#/components/schemas/Operation'
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Range'
      - $ref: '#/components/schemas/ReferenceElement'
      - $ref: '#/components/schemas/AnnotatedRelationshipElement'
      - $ref: '#/components/schemas/RelationshipElement'
      - $ref: '#/components/schemas/SubmodelElementList'
      - $ref: '#/components/schemas/SubmodelElementStruct'
    Entity:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - required:
        - entityType
        properties:
          entityType:
            $ref: '#/components/schemas/EntityType'
          globalAssetId:
            $ref: '#/components/schemas/Reference'
          specificAssetIds:
            type: array
            items:
              $ref: '#/components/schemas/IdentifierKeyValuePair'
          statements:
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement'
    EntityType:
      type: string
      enum:
      - CoManagedEntity
      - SelfManagedEntity
    Event:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
    BasicEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - observed
        properties:
          observed:
            $ref: '#/components/schemas/Reference'
    MultiLanguageProperty:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          value:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          valueId:
            $ref: '#/components/schemas/Reference'
    Operation:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          inoutputVariable:
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
          inputVariable:
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
          outputVariable:
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
    OperationVariable:
      required:
      - value
      type: object
      properties:
        value:
          oneOf:
          - $ref: '#/components/schemas/Blob'
          - $ref: '#/components/schemas/File'
          - $ref: '#/components/schemas/Capability'
          - $ref: '#/components/schemas/Entity'
          - $ref: '#/components/schemas/Event'
          - $ref: '#/components/schemas/BasicEvent'
          - $ref: '#/components/schemas/MultiLanguageProperty'
          - $ref: '#/components/schemas/Operation'
          - $ref: '#/components/schemas/Property'
          - $ref: '#/components/schemas/Range'
          - $ref: '#/components/schemas/ReferenceElement'
          - $ref: '#/components/schemas/AnnotatedRelationshipElement'
          - $ref: '#/components/schemas/RelationshipElement'
          - $ref: '#/components/schemas/SubmodelElementList'
          - $ref: '#/components/schemas/SubmodelElementStruct'
    Property:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - $ref: '#/components/schemas/ValueObject'
    Range:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - required:
        - valueType
        properties:
          max:
            type: string
          min:
            type: string
          valueType:
            $ref: '#/components/schemas/ValueTypeEnum'
    ReferenceElement:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          value:
            $ref: '#/components/schemas/Reference'
    AnnotatedRelationshipElement:
      allOf:
      - $ref: '#/components/schemas/RelationshipElement'
      - properties:
          annotation:
            type: array
            items:
              $ref: '#/components/schemas/DataElement'
    RelationshipElement:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - required:
        - first
        - second
        properties:
          first:
            $ref: '#/components/schemas/Reference'
          second:
            $ref: '#/components/schemas/Reference'
    DataElement:
      oneOf:
      - $ref: '#/components/schemas/Blob'
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/MultiLanguageProperty'
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Range'
      - $ref: '#/components/schemas/ReferenceElement'
    SubmodelElementList:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          semanticIdValues:
            $ref: '#/components/schemas/Reference'
          submodelElementTypeValues:
            $ref: '#/components/schemas/ModelType'
          value:
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement'
          valueTypeValues:
            $ref: '#/components/schemas/ValueTypeEnum'
    SubmodelElementStruct:
      properties:
        value:
          $ref: '#/components/schemas/SubmodelElement'
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
    Security:
      required:
      - accessControlPolicyPoints
      type: object
      properties:
        accessControlPolicyPoints:
          $ref: '#/components/schemas/AccessControlPolicyPoints'
        certificate:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        requiredCertificateExtension:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    AccessControlPolicyPoints:
      required:
      - policyAdministrationPoint
      - policyDecisionPoint
      - policyEnforcementPoint
      type: object
      properties:
        policyAdministrationPoint:
          $ref: '#/components/schemas/PolicyAdministrationPoint'
        policyDecisionPoint:
          $ref: '#/components/schemas/PolicyDecisionPoint'
        policyEnforcementPoint:
          $ref: '#/components/schemas/PolicyEnforcementPoint'
        policyInformationPoints:
          $ref: '#/components/schemas/PolicyInformationPoints'
    PolicyAdministrationPoint:
      required:
      - externalAccessControl
      type: object
      properties:
        externalAccessControl:
          type: boolean
        localAccessControl:
          $ref: '#/components/schemas/AccessControl'
    AccessControl:
      type: object
      properties:
        accessPermissionRule:
          type: array
          items:
            $ref: '#/components/schemas/AccessPermissionRule'
        defaultEnvironmentAttributes:
          $ref: '#/components/schemas/Reference'
        defaultPermissions:
          $ref: '#/components/schemas/Reference'
        defaultSubjectAttributes:
          $ref: '#/components/schemas/Reference'
        selectableEnvironmentAttributes:
          $ref: '#/components/schemas/Reference'
        selectablePermissions:
          $ref: '#/components/schemas/Reference'
        selectableSubjectAttributes:
          $ref: '#/components/schemas/Reference'
    AccessPermissionRule:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/Qualifiable'
      - required:
        - targetSubjectAttributes
        properties:
          permissionsPerObject:
            type: array
            items:
              $ref: '#/components/schemas/PermissionsPerObject'
          targetSubjectAttributes:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/SubjectAttributes'
    PermissionsPerObject:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/Reference'
        permission:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        targetObjectAttributes:
          $ref: '#/components/schemas/ObjectAttributes'
    Permission:
      required:
      - kindOfPermission
      - permission
      type: object
      properties:
        kindOfPermission:
          type: string
          enum:
          - Allow
          - Deny
          - NotApplicable
          - Undefined
        permission:
          $ref: '#/components/schemas/Reference'
    ObjectAttributes:
      type: object
      properties:
        objectAttribute:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Property'
    SubjectAttributes:
      type: object
      properties:
        subjectAttributes:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    PolicyDecisionPoint:
      required:
      - externalPolicyDecisionPoints
      type: object
      properties:
        externalPolicyDecisionPoints:
          type: boolean
    PolicyEnforcementPoint:
      required:
      - externalPolicyEnforcementPoint
      type: object
      properties:
        externalPolicyEnforcementPoint:
          type: boolean
    PolicyInformationPoints:
      required:
      - externalInformationPoint
      type: object
      properties:
        externalInformationPoint:
          type: boolean
        internalInformationPoint:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    Certificate:
      type: object
      properties:
        blobCertificate:
          $ref: '#/components/schemas/Blob'
        containedExtension:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        lastCertificate:
          type: boolean
    View:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - properties:
          containedElements:
            type: array
            items:
              $ref: '#/components/schemas/Reference'
    Submodel:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasSemantics'
      - properties:
          kind:
            $ref: '#/components/schemas/ModelingKind'
          submodelElements:
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement'
    OperationRequest:
      type: object
      properties:
        inoutputArguments:
          type: array
          items:
            $ref: '#/components/schemas/OperationVariable'
        inputArguments:
          type: array
          items:
            $ref: '#/components/schemas/OperationVariable'
        requestId:
          type: string
        timeout:
          type: integer
    OperationResult:
      type: object
      properties:
        executionResult:
          $ref: '#/components/schemas/Result'
        executionState:
          type: string
          enum:
          - Initiated
          - Running
          - Completed
          - Canceled
          - Failed
          - Timeout
        inoutputArguments:
          type: array
          items:
            $ref: '#/components/schemas/OperationVariable'
        outputArguments:
          type: array
          items:
            $ref: '#/components/schemas/OperationVariable'
        requestId:
          type: string
    Result:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        success:
          type: boolean
    Message:
      type: object
      properties:
        code:
          type: string
        messageType:
          type: string
          enum:
          - Undefined
          - Info
          - Warning
          - Error
          - Exception
        text:
          type: string
        timestamp:
          type: string
    Descriptor:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
      example:
        endpoints:
        - protocolInformation:
            endpointAddress: https://localhost:1234
            endpointProtocolVersion: 1.1
          interface: AAS-1.0
        - protocolInformation:
            endpointAddress: opc.tcp://localhost:4840
          interface: AAS-1.0
        - protocolInformation:
            endpointAddress: https://localhost:5678
            endpointProtocolVersion: 1.1
            subprotocol: OPC UA Basic SOAP
            subprotocolBody: ns=2;s=MyAAS
            subprotocolBodyEncoding: plain
          interface: AAS-1.0
    Endpoint:
      required:
      - interface
      - protocolInformation
      type: object
      properties:
        interface:
          type: string
        protocolInformation:
          $ref: '#/components/schemas/ProtocolInformation'
    ProtocolInformation:
      required:
      - endpointAddress
      type: object
      properties:
        endpointAddress:
          type: string
        endpointProtocol:
          type: string
        endpointProtocolVersion:
          type: string
        subprotocol:
          type: string
        subprotocolBody:
          type: string
        subprotocolBodyEncoding:
          type: string
    SubmodelDescriptor:
      required:
      - endpoints
      - identification
      type: object
      properties:
        administration:
          $ref: '#/components/schemas/AdministrativeInformation'
        description:
          type: array
          items:
            $ref: '#/components/schemas/LangString'
        idShort:
          type: string
        identification:
          $ref: '#/components/schemas/Identifier'
        semanticId:
          $ref: '#/components/schemas/Reference'
      allOf:
      - $ref: '#/components/schemas/Descriptor'
    ConceptDescription:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          isCaseOf:
            type: array
            items:
              $ref: '#/components/schemas/Reference'
    PackageDescription:
      type: object
      properties:
        aasIds:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        packageId:
          type: string
    AssetAdministrationShellEnvironment:
      type: object
      properties:
        assetAdministrationShells:
          type: array
          items:
            $ref: '#/components/schemas/AssetAdministrationShell'
        conceptDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/ConceptDescription'
        submodels:
          type: array
          items:
            $ref: '#/components/schemas/Submodel'
    BlobCertificate:
      type: object
      properties:
        blobCertificate:
          $ref: '#/components/schemas/Blob'
        containedExtension:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        lastCertificate:
          type: boolean
    packages_body:
      type: object
      properties:
        aasIds:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        file:
          type: string
          format: binary
        fileName:
          type: string
    packages_packageId_body:
      type: object
      properties:
        aasIds:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        file:
          type: string
          format: binary
        fileName:
          type: string
