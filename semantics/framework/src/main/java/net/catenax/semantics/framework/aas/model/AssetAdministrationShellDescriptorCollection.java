/*
 * DotAAS Part 2 | HTTP/REST | Registry and Discovery
 * The registry and discovery interface as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: Final-Draft
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.framework.aas.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * AssetAdministrationShellDescriptorCollection
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-04T18:11:20.840352600+01:00[Europe/Berlin]")
public class AssetAdministrationShellDescriptorCollection {
  @JsonProperty("items")
  private List<AssetAdministrationShellDescriptor> items = new ArrayList<>();

  @JsonProperty("totalItems")
  private Integer totalItems = null;

  @JsonProperty("currentPage")
  private Integer currentPage = null;

  @JsonProperty("totalPages")
  private Integer totalPages = null;

  @JsonProperty("itemCount")
  private Integer itemCount = null;

  public AssetAdministrationShellDescriptorCollection items(List<AssetAdministrationShellDescriptor> items) {
    this.items = items;
    return this;
  }

  public AssetAdministrationShellDescriptorCollection addItemsItem(AssetAdministrationShellDescriptor itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @Schema(required = true, description = "")
  public List<AssetAdministrationShellDescriptor> getItems() {
    return items;
  }

  public void setItems(List<AssetAdministrationShellDescriptor> items) {
    this.items = items;
  }

  public AssetAdministrationShellDescriptorCollection totalItems(Integer totalItems) {
    this.totalItems = totalItems;
    return this;
  }

   /**
   * Get totalItems
   * @return totalItems
  **/
  @Schema(required = true, description = "")
  public Integer getTotalItems() {
    return totalItems;
  }

  public void setTotalItems(Integer totalItems) {
    this.totalItems = totalItems;
  }

  public AssetAdministrationShellDescriptorCollection currentPage(Integer currentPage) {
    this.currentPage = currentPage;
    return this;
  }

   /**
   * Get currentPage
   * @return currentPage
  **/
  @Schema(required = true, description = "")
  public Integer getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  public AssetAdministrationShellDescriptorCollection totalPages(Integer totalPages) {
    this.totalPages = totalPages;
    return this;
  }

   /**
   * Get totalPages
   * @return totalPages
  **/
  @Schema(required = true, description = "")
  public Integer getTotalPages() {
    return totalPages;
  }

  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }

  public AssetAdministrationShellDescriptorCollection itemCount(Integer itemCount) {
    this.itemCount = itemCount;
    return this;
  }

   /**
   * Get itemCount
   * @return itemCount
  **/
  @Schema(required = true, description = "")
  public Integer getItemCount() {
    return itemCount;
  }

  public void setItemCount(Integer itemCount) {
    this.itemCount = itemCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetAdministrationShellDescriptorCollection assetAdministrationShellDescriptorCollection = (AssetAdministrationShellDescriptorCollection) o;
    return Objects.equals(this.items, assetAdministrationShellDescriptorCollection.items) &&
        Objects.equals(this.totalItems, assetAdministrationShellDescriptorCollection.totalItems) &&
        Objects.equals(this.currentPage, assetAdministrationShellDescriptorCollection.currentPage) &&
        Objects.equals(this.totalPages, assetAdministrationShellDescriptorCollection.totalPages) &&
        Objects.equals(this.itemCount, assetAdministrationShellDescriptorCollection.itemCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, totalItems, currentPage, totalPages, itemCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetAdministrationShellDescriptorCollection {\n");
    
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    totalItems: ").append(toIndentedString(totalItems)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
