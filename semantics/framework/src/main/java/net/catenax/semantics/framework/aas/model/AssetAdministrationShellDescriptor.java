/*
 * DotAAS Part 2 | HTTP/REST | Registry and Discovery
 * The registry and discovery interface as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: Final-Draft
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.framework.aas.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * AssetAdministrationShellDescriptor
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-04T18:11:20.840352600+01:00[Europe/Berlin]")
public class AssetAdministrationShellDescriptor extends Descriptor {
  @JsonProperty("administration")
  private AdministrativeInformation administration = null;

  @JsonProperty("description")
  private List<LangString> description = null;

  @JsonProperty("globalAssetId")
  private Reference globalAssetId = null;

  @JsonProperty("idShort")
  private String idShort = null;

  @JsonProperty("identification")
  private String identification = null;

  @JsonProperty("specificAssetIds")
  private List<IdentifierKeyValuePair> specificAssetIds = null;

  @JsonProperty("submodelDescriptors")
  private List<SubmodelDescriptor> submodelDescriptors = null;

  public AssetAdministrationShellDescriptor administration(AdministrativeInformation administration) {
    this.administration = administration;
    return this;
  }

   /**
   * Get administration
   * @return administration
  **/
  @Schema(description = "")
  public AdministrativeInformation getAdministration() {
    return administration;
  }

  public void setAdministration(AdministrativeInformation administration) {
    this.administration = administration;
  }

  public AssetAdministrationShellDescriptor description(List<LangString> description) {
    this.description = description;
    return this;
  }

  public AssetAdministrationShellDescriptor addDescriptionItem(LangString descriptionItem) {
    if (this.description == null) {
      this.description = new ArrayList<>();
    }
    this.description.add(descriptionItem);
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public List<LangString> getDescription() {
    return description;
  }

  public void setDescription(List<LangString> description) {
    this.description = description;
  }

  public AssetAdministrationShellDescriptor globalAssetId(Reference globalAssetId) {
    this.globalAssetId = globalAssetId;
    return this;
  }

   /**
   * Get globalAssetId
   * @return globalAssetId
  **/
  @Schema(description = "")
  public Reference getGlobalAssetId() {
    return globalAssetId;
  }

  public void setGlobalAssetId(Reference globalAssetId) {
    this.globalAssetId = globalAssetId;
  }

  public AssetAdministrationShellDescriptor idShort(String idShort) {
    this.idShort = idShort;
    return this;
  }

   /**
   * Get idShort
   * @return idShort
  **/
  @Schema(description = "")
  public String getIdShort() {
    return idShort;
  }

  public void setIdShort(String idShort) {
    this.idShort = idShort;
  }

  public AssetAdministrationShellDescriptor identification(String identification) {
    this.identification = identification;
    return this;
  }

   /**
   * Get identification
   * @return identification
  **/
  @Schema(required = true, description = "")
  public String getIdentification() {
    return identification;
  }

  public void setIdentification(String identification) {
    this.identification = identification;
  }

  public AssetAdministrationShellDescriptor specificAssetIds(List<IdentifierKeyValuePair> specificAssetIds) {
    this.specificAssetIds = specificAssetIds;
    return this;
  }

  public AssetAdministrationShellDescriptor addSpecificAssetIdsItem(IdentifierKeyValuePair specificAssetIdsItem) {
    if (this.specificAssetIds == null) {
      this.specificAssetIds = new ArrayList<>();
    }
    this.specificAssetIds.add(specificAssetIdsItem);
    return this;
  }

   /**
   * Get specificAssetIds
   * @return specificAssetIds
  **/
  @Schema(description = "")
  public List<IdentifierKeyValuePair> getSpecificAssetIds() {
    return specificAssetIds;
  }

  public void setSpecificAssetIds(List<IdentifierKeyValuePair> specificAssetIds) {
    this.specificAssetIds = specificAssetIds;
  }

  public AssetAdministrationShellDescriptor submodelDescriptors(List<SubmodelDescriptor> submodelDescriptors) {
    this.submodelDescriptors = submodelDescriptors;
    return this;
  }

  public AssetAdministrationShellDescriptor addSubmodelDescriptorsItem(SubmodelDescriptor submodelDescriptorsItem) {
    if (this.submodelDescriptors == null) {
      this.submodelDescriptors = new ArrayList<>();
    }
    this.submodelDescriptors.add(submodelDescriptorsItem);
    return this;
  }

   /**
   * Get submodelDescriptors
   * @return submodelDescriptors
  **/
  @Schema(description = "")
  public List<SubmodelDescriptor> getSubmodelDescriptors() {
    return submodelDescriptors;
  }

  public void setSubmodelDescriptors(List<SubmodelDescriptor> submodelDescriptors) {
    this.submodelDescriptors = submodelDescriptors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetAdministrationShellDescriptor assetAdministrationShellDescriptor = (AssetAdministrationShellDescriptor) o;
    return Objects.equals(this.administration, assetAdministrationShellDescriptor.administration) &&
        Objects.equals(this.description, assetAdministrationShellDescriptor.description) &&
        Objects.equals(this.globalAssetId, assetAdministrationShellDescriptor.globalAssetId) &&
        Objects.equals(this.idShort, assetAdministrationShellDescriptor.idShort) &&
        Objects.equals(this.identification, assetAdministrationShellDescriptor.identification) &&
        Objects.equals(this.specificAssetIds, assetAdministrationShellDescriptor.specificAssetIds) &&
        Objects.equals(this.submodelDescriptors, assetAdministrationShellDescriptor.submodelDescriptors) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(administration, description, globalAssetId, idShort, identification, specificAssetIds, submodelDescriptors, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetAdministrationShellDescriptor {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    administration: ").append(toIndentedString(administration)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    globalAssetId: ").append(toIndentedString(globalAssetId)).append("\n");
    sb.append("    idShort: ").append(toIndentedString(idShort)).append("\n");
    sb.append("    identification: ").append(toIndentedString(identification)).append("\n");
    sb.append("    specificAssetIds: ").append(toIndentedString(specificAssetIds)).append("\n");
    sb.append("    submodelDescriptors: ").append(toIndentedString(submodelDescriptors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
