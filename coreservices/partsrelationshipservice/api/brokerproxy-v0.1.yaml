openapi: 3.0.1
info:
  description: API to send messages to message broker.
  title: Catena-X Broker Proxy
  version: v0.1
servers:
- url: http://localhost:8081
paths:
  /brokerproxy/v0.1/partAspectUpdate:
    post:
      operationId: uploadPartAspectUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartAspectUpdateRequest'
        required: true
      responses:
        "204":
          description: PartAspectUpdate uploaded successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
      summary: Upload a PartAspectUpdate. Describes an update of a part aspect location.
      tags:
      - Broker HTTP Proxy API
  /brokerproxy/v0.1/partAttributeUpdate:
    post:
      operationId: uploadPartAttributeUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartAttributeUpdateRequest'
        required: true
      responses:
        "204":
          description: PartAttributeUpdate uploaded successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
      summary: Upload a PartAttributeUpdate. Describes an update of a part attribute.
      tags:
      - Broker HTTP Proxy API
  /brokerproxy/v0.1/partRelationshipUpdateList:
    post:
      operationId: uploadPartRelationshipUpdateList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartRelationshipUpdateRequest'
        required: true
      responses:
        "204":
          description: PartRelationshipUpdateList uploaded successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
      summary: Upload a PartRelationshipUpdateList. Describes an update of (part of)
        a BOM.
      tags:
      - Broker HTTP Proxy API
components:
  schemas:
    Aspect:
      type: object
      description: Aspect location data
      properties:
        name:
          type: string
          description: Aspect name
          example: CE
        url:
          type: string
          format: url
          description: URL location of aspect data
          example: http://aspects-url/CE
      required:
      - name
      - url
    ErrorResponse:
      type: object
      description: Error response
      properties:
        errors:
          type: array
          description: List of errors
          items:
            type: string
            description: List of errors
        message:
          type: string
          description: Error message
        statusCode:
          type: string
          description: Error code
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
    PartAspectUpdateRequest:
      type: object
      description: Describes an update of a part aspect location.
      properties:
        aspects:
          type: array
          description: Aspect location.
          items:
            $ref: '#/components/schemas/Aspect'
        effectTime:
          type: string
          format: date-time
          description: Instant at which the update was applied
        part:
          $ref: '#/components/schemas/PartId'
        remove:
          type: boolean
          description: <ul>   <li>TRUE if the aspect URLs are to be deleted from the
            part</li>   <li>FALSE otherwise (“normal case” - an aspect URL is added
            to a part).</li></ul>
      required:
      - aspects
      - effectTime
      - part
    PartAttributeUpdateRequest:
      type: object
      description: Describes an update of a part attribute.
      properties:
        effectTime:
          type: string
          format: date-time
          description: Instant at which the update was applied
        name:
          type: string
          description: Part attributes.
          enum:
          - PART_TYPE_NAME
        part:
          $ref: '#/components/schemas/PartId'
        value:
          type: string
          description: Attribute value
          example: Vehicle
      required:
      - effectTime
      - name
      - part
      - value
    PartId:
      type: object
      description: Unique part identifier
      properties:
        objectIDManufacturer:
          type: string
          description: "Unique identifier of a single, unique physical (sub)component/part/batch,\
            \ given by its manufacturer. For a vehicle, the Vehicle Identification\
            \ Number (VIN)."
        oneIDManufacturer:
          type: string
          description: Readable ID of manufacturer including plant
      required:
      - objectIDManufacturer
      - oneIDManufacturer
    PartRelationship:
      type: object
      description: Link between two parts.
      properties:
        child:
          $ref: '#/components/schemas/PartId'
        parent:
          $ref: '#/components/schemas/PartId'
      required:
      - child
      - parent
    PartRelationshipUpdate:
      type: object
      description: Describes an update of a relationship
      properties:
        effectTime:
          type: string
          format: date-time
          description: Instant at which the update was applied
        relationship:
          $ref: '#/components/schemas/PartRelationship'
        remove:
          type: boolean
          description: "<ul>   <li>TRUE if the child is not part of the parent (used\
            \ to update data, e.g. a relationship was wrongly submitted, or a part\
            \ is removed from a car during maintenance)</li>   <li>FALSE otherwise\
            \ (“normal case” - a part is added into a parent part).</li></ul>"
        stage:
          type: string
          description: Stage defining whether changes apply to the AS_BUILT or AS_MAINTAINED
            BOM views.
          enum:
          - BUILD
          - MAINTENANCE
      required:
      - effectTime
      - relationship
      - stage
    PartRelationshipUpdateRequest:
      type: object
      description: Describes an update of (part of) a BOM.
      properties:
        relationships:
          type: array
          description: List of relationships updates
          items:
            $ref: '#/components/schemas/PartRelationshipUpdate'
      required:
      - relationships
